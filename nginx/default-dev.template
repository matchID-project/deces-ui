upstream elasticsearch {
  server <ES_HOST>:<ES_PORT>;
}

upstream frontend-dev {
  server <FRONTEND_DEV_HOST>:<FRONTEND_DEV_PORT>;
}

upstream frontend-dev-reload {
  server <FRONTEND_DEV_HOST>:35729;
}

upstream backend {
  server <BACKEND_HOST>:<BACKEND_PORT>;
}

server {
  listen 80 default_server;
  listen 35729;

  # frontend (dev, npm server)
  location / {
    limit_req zone=app burst=10 nodelay;
    limit_req_status 429;
  	proxy_pass http://frontend-dev;
    # Allow protocol upgrade to websocket
    proxy_http_version 1.1;
    proxy_next_upstream off;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location ~ "/livereload.*" {
  	proxy_pass http://frontend-dev-reload;
    # Allow protocol upgrade to websocket
    proxy_http_version 1.1;
    proxy_next_upstream off;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location ~ "^<ES_PROXY_PATH>.*" {
    if ($request_method != POST) {
       return 405;
    }
    limit_req zone=api burst=<API_USER_BURST>;
    limit_req zone=server burst=<API_GLOBAL_BURST>;
    limit_req_status 429;
    rewrite "^<ES_PROXY_PATH>/?(\?.*)?$" /<ES_INDEX>/_search$1 break;
    proxy_pass http://elasticsearch;
    proxy_redirect off;
    proxy_buffering off;
    proxy_http_version 1.1;
  }

  location ~ "^<DATAGOUV_PROXY_PATH>.*" {
    if ($request_method != GET) {
      return 405;
    }
    limit_req zone=download;
    rewrite "^<DATAGOUV_PROXY_PATH>/?(.*)?$" <DATAGOUV_RESOURCES_REWRITE_PATH>/$1 break;
    proxy_pass <DATAGOUV_RESOURCES_PROXY>;
    proxy_redirect off;
    proxy_buffering off;
    proxy_http_version 1.1;
  }

  location ~ "^<BACKEND_PROXY_PATH>.*" {
    proxy_pass http://backend;
    # Allow protocol upgrade to websocket
    proxy_http_version 1.1;
    proxy_next_upstream off;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

}
