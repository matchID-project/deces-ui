apiVersion: v1
kind: Secret
metadata:
  name: s3-data-keys
  namespace: ${KUBE_NAMESPACE}
type: Opaque
data:
  AWS_ACCESS_KEY_ID: ${STORAGE_ACCESS_KEY_B64}
  AWS_SECRET_ACCESS_KEY: ${STORAGE_SECRET_KEY_B64}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP}-es-deployment
  namespace: ${KUBE_NAMESPACE}
spec:
  selector:
    matchLabels:
      app: ${APP}-es
  template:
    metadata:
      labels:
        app: ${APP}-es
    spec:
      initContainers:
      - name: sysctl
        image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
        securityContext:
          privileged: true
        command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
      - name: install-plugins
        image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
        command:
        - sh
        - -c
        - |
          bin/elasticsearch-plugin install --batch repository-s3
      - name: add-aws-keys
        image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: s3-data-keys
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: s3-data-keys
              key: AWS_SECRET_ACCESS_KEY
        command:
        - sh
        - -c
        - |
          echo $AWS_ACCESS_KEY_ID | bin/elasticsearch-keystore add --stdin --force s3.client.default.access_key
          echo $AWS_SECRET_ACCESS_KEY | bin/elasticsearch-keystore add --stdin --force s3.client.default.secret_key
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
        ports:
        - containerPort: ${ES_PORT}
        env:
        - name: ES_JAVA_OPTS
          value: -Xms${ES_MEM} -Xmx${ES_MEM}
        - name: discovery.type
          value: single-node
        resources:
          requests:
            memory: ${ES_MEM_KUBE}
---
apiVersion: v1
kind: Service
metadata:
  name: ${APP}-es-svc
  namespace: ${KUBE_NAMESPACE}
spec:
  ports:
  - port: ${ES_PORT}
    targetPort: ${ES_PORT}
    protocol: TCP
    name: http
  selector:
    app: ${APP}-es